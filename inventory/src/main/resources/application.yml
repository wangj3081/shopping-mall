server:
  port: 8512

spring:
  application:
      name: mall-inventory
  ribbon:
    ReadTimeout: 60000
    ConnectTimeout: 60000
  cloud:
    consul:
      host: "@config.consul.host@"
      port: "@config.consul.port@"
      enabled: true
      discovery:
        tags: version=1.0,author=code
        health-check-path: /manager/info # 为健康检查的url,由consul定时调用一次判断服务是否可用
        health-check-interval: 5s # 检查间隔时间
        register-health-check: false # 不做健康检查
#        instance-id: ${spring.application.name}:${java.rmi.server.hostname}:${server.port} # 注册的服务ID
        instance-id: ${spring.application.name}:${server.port} # 注册的服务ID
       # service-name: ${spring.application.name} # 注册的服务名称
        service-name: mall-inventory # 注册的服务名称
        prefer-ip-address: true # 是否使用指定IP地址，默认为 false
        ip-address: "@config.consul.host@" # 指定 IP 地址
        deregister: true
    # seata 配置
    alibaba:
      seata:
        tx-service-group: fsp_tx_group
    ribbon:
      ReadTimeout: 60000
      ConnectTimeout: 60000
  zipkin:
#    base-url: http://localhost:8601 # 所有的数据提交到此服务
    sender:
      type: rabbit # 改用 rabbitMQ
  sleuth:
    sampler:
      probability: 1.0  # 定义抽样比率 100% 进行比例抽样，默认为 0.1
    messaging:
        rabbit:
          enabled: true
  rabbitmq: # rabbitmq 配置
    host: 192.168.158.134
    port: 5672
    username: admin
    password: rabbit
    virtual-host: /
    listener: # 配置重试策略
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true
  profiles:
    active: dev
    # 数据库连接配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: "@spring.datasource.driverClassName@"
    url: "@spring.datasource.url@"
    username: "@spring.datasource.username@"
    password: "@spring.datasource.password@"
    druid:
      removeAbandoned: true
      removeAbandonedTimeout: 2800
      timeBetweenEvictionRunsMillis: 50000
      minEvictableIdleTimeMillis: 200000
      initial-size: 10
      max-active: 100
      min-idle: 10
# actuator 配置
management:
  endpoints:
    web:
      exposure:
        include: '*' # actuator2.0 版本之后默认只暴露 info 与 health，使用 * 为暴露所有
      basePath: '/manager' # 监控请求地址前缀,默认为 /actuator

info:
  app.name: "@config.logger.appname@"
  app.version: 1.0

# mybatis-plus 配置
mybatis-plus:
  type-aliases-package: com.shopping.inventory.entity.**
  configuration:
    cache-enabled: false # 不开启二级缓存
    map-underscore-to-camel-case: true
  mapper-locations:
    - classpath*:/mapper/*.xml # xml 文件
  global-config:
    db-config:
      id-type: uuid # 全局唯一 ID
      field-strategy: not_null # 做非空判断
ribbon:
  ReadTimeout: 20000 # 获取 rest 接口返回数据超时时间, 单位 毫秒，默认为 1 秒钟
  ConnectTimeout: 20000 # 连接 rest 接口超时时间, 单位 毫秒，默认为 1 秒钟

# rocketmq 配置
rocketmq:
  name-server: 192.168.205.130:9876
  consumer:
    group: inventory-group