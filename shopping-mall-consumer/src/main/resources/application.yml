server:
  port: 80

spring:
  application:
      name: mall-consumer
  profiles:
    active: dev
  cloud:
    consul:
      host: @config.consul.host@
      port: @config.consul.port@
      enabled: true
      discovery:
        tags: version=1.0,author=code
        health-check-path: /manager/info # 为健康检查的url,由consul定时调用一次判断服务是否可用
        health-check-interval: 5s # 检查间隔时间
        register-health-check: false # 不做健康检查
#        instance-id: ${spring.application.name}:${java.rmi.server.hostname}:${server.port} # 注册的服务ID
        instance-id: ${spring.application.name}:${server.port} # 注册的服务ID
       # service-name: ${spring.application.name} # 注册的服务名称
        service-name: mall-consumer # 注册的服务名称
        prefer-ip-address: true # 是否使用指定IP地址，默认为 false
        ip-address: @config.consul.host@ # 指定 IP 地址
        deregister: true
  zipkin:
#    base-url: http://localhost:8601 # 所有的数据提交到此服务
    sender:
      type: rabbit # 改用 rabbitMQ
  sleuth:
    sampler:
      probability: 1.0  # 定义抽样比率 100% 进行比例抽样，默认为 0.1
    messaging:
        rabbit:
          enabled: true
  rabbitmq: # rabbitmq 配置
    host: 192.168.158.134
    port: 5672
    username: admin
    password: rabbit
    virtual-host: /
    listener: # 配置重试策略
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true
  # redis 配置
  redis:
    host: 192.168.205.130
    port: 6379
    password: redis
    database: 0
    lettuce:
      pool:
        max-active: 10 # 最大可用连接
        max-idle: 1 # 最大可维持连接
        min-idle: 1 # 最小可维持连接

# actuator 配置
management:
  endpoints:
    web:
      exposure:
        include: '*' # actuator2.0 版本之后默认只暴露 info 与 health，使用 * 为暴露所有
      basePath: '/manager' # 监控请求地址前缀,默认为 /actuator

info:
  app.name: "@config.logger.appname@"
  app.version: 1.0


# ribbon 配置
ribbon:
  ReadTimeout: 5000 # 获取 rest 接口返回数据超时时间, 单位 毫秒，默认为 1 秒钟
  ConnectTimeout: 5000 # 连接 rest 接口超时时间, 单位 毫秒，默认为 1 秒钟

# redis 配置